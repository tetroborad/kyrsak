import os#для файлов
from lxml import etree#для парсинга xml
from sqlalchemy import *#для работы с БД
from sqlalchemy.orm import sessionmaker
engine = create_engine('postgresql://zakupki:zakupki@localhost:15432/zakupki', echo = False)#
meta = MetaData()#мета данные
Session = sessionmaker(bind = engine) #сесия
conn = engine.connect()
ai_list=[]#пустой список для сравнения
parser=etree.XMLParser(remove_comments=True,recover=True)#настройки парсера
zakupki= Table(
   'nsiBudget', meta, 
   Column('id', Integer, primary_key = True), 
   Column('gos_id',Integer),
   Column('name', String), 
   Column('actual', Boolean),
)
meta.drop_all(engine)
meta.create_all(engine)
def lib(xmlFile):#читаем файл
    lib={}#создаем пустой словарь
    lib[xmlFile.getroot()]=lib_chil(xmlFile.getroot())#заполняем словарь 
    return lib#возвращаем

def lib_chil(chil):#создание словарей
    id=0
    last_child=None
    lib={}#создаем пустой словарь
    if chil.getchildren() != ai_list :#узнаём в теге есть ещо теги или только текст
        for child_root in chil.getchildren():#проходимся по всем тегам в нутри расматриваемого тега
            lib_elem=lib_chil(child_root)
            if last_child==etree.QName(child_root.tag).localname:
                id=id+1#получаем словарь того что в нутри тега
            lib[str(etree.QName(child_root.tag).localname)+str(id)]=lib_elem#в писание в текущий словарь под ключом имя тега то что в нем
            last_child=etree.QName(child_root.tag).localname
    else:#если в нутри нашего тега нету тегов
        return chil.text#передай текст тега
    return lib#верни список всех тегов всех 

def dazz (lib):  
    ins = zakupki.insert()
    for key in lib.keys():
        for key_2 in lib[key].keys():
            for  key_3 in lib[key][key_2].keys():
                ins=ins.values(gos_id=int(lib[key][key_2][key_3]["code0"]),name=str(lib[key][key_2][key_3]["name0"]),actual=bool(lib[key][key_2][key_3]["actual0"]))
                result = conn.execute(ins)

fails=[]#
fails=os.listdir("libreal")#получение списка всех файлов в библеотеке
with open ("wraiter","w") as wraiter:
    for i in fails:#обработка всех файлов
        with open("libreal/"+i) as fobj:#открытие файла
            xml = etree.parse(fobj,parser)#парсинк из документа 
        t=lib(xml)#приврощение распарсеного документа в словарь словарей
        t=dazz(t)
    s = zakupki.select()
    result = conn.execute(s) 
    for row in result:
        wraiter.writelines(str(row)+"\n")
