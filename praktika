import os
import sqlalchemy
from lxml import etree
engine = create_engine('postgresql://scott:tiger@localhost/zakynki', echo = True)#уточнить текстовый юрл таблицы
meta = MetaData()
Session = sessionmaker(bind = engine)
ai_list=[]
parser=etree.XMLParser(remove_comments=True,recover=True)
def rid_lib(lib,naim):
   for book in lib:
        if lib[dook] == dict:
           rid_lib(lib[book],book)
        m=creare_essence(naim,lib)
        lib[book]=m
    creat_essence(naim,lib)
def creat_essence (naim,attribute):
    if  #поищи в базе сущность с именем naim желательно логическую функцию
        #можно в кинуть словарь в БД и должно работать применая команда == conn.execute(students.insert(),atribute)
    else:
        tex="CRE"
        # проверка на символ созданной сущности 
        # связать сущности
        # елсе
        # добавить в сущность строчку 
    return #чтото важное чтобы видеть что библеотека создана а данные удоленны
def lib(xmlFile):
    lib={}
    lib[xmlFile.getroot()]=lib_chil(xmlFile.getroot())  
    return lib

def lib_chil(chil):
    lib={}
    if chil.getchildren() != ai_list :
        for child_root in chil:
            lib_elem=lib_chil(child_root)
            lib[etree.QName(child_root.tag).localname]=lib_elem
    else:
        return chil.text
    return lib

fails=[]
fails=os.listdir("training")
for i in fails:
    with open("training"+i, "w") as somefile:
        xml = etree.parse(fobj,parser)
    t=lib(xml,dok)
    for iv in range(2):
        t=t.values()
    rid_lib(t,doc)